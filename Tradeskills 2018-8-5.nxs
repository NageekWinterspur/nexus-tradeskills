{"type":"group","name":"tradeskills","enabled":true,"id":1,"items":[{"type":"function","name":"README","enabled":true,"id":404,"code":"/* The Tradeskill Package created by Nageek.\nNotes:\n(8/5/2018)\nThanks for trying out my package. It is still a work in progress and probably always will be since stuff in Achaea is always evolving, but that is not a bad thing. So what some of the stuff does.\n\nFor inkmilling:\n\tAliases:\n\t\t(CASE SENSITIVE) mill(color) <numofbatches> <inkperbatch>: allows you to mill multiple batches and also customize how many inks you can \t\t\t\tmake. EX. millgreen 20 5 will mill 20 batches of 5 inks per batch. No need to take stuff fromm rift as it does this for you.\n    \t\n        millstop: stops the inkmilling so that you do not have to stop all your scripts.\n        \n        blueswitch: switches the default blue reagent between lumic and inkbladder\n        \n        redswitch: switches the default red reagent between redclay and red chitin\n        \n        startup: runs the onLoad function so you do not have to restart to set up\n        \n\n    Triggers:\n        A trigger to take ink from mill and puts it into the rift automatically\n            \n\nFor Gathering:\n\tAliases:\n    \tg <thing>: Allows you to just gather the thing you want without having to type in gather <thing>. Also has support for butchering by \t\t\t\tletting you type g <reagentname> (Ex. \"g scales\" will \"butcher fish for scales\" while \"g inkbladder\" will butcher squid.\n       \n       refine <times> <thing>: Allows you to refine repeatedly how ever many times you need to. Need 100 sugar but do not want to press enter 100 \t\t\ttimes? This alias is for you. Also puts the refined ingredient in the rift so you do not lose it.\n        \n        refinestop: Someone walk in and you need to move? Your city is being raided and you need to move? Whatever the reason, if you need to stop \t\t\t\trefining before the number of times you planned on, just do stoprefine and you will stop.\n        \n     Triggers:\n     \tA trigger that, no matter what you gather, it rifts what ever it is.\n        A trigger to rift stuff after you butcher\n        A trigger to empty your hands and wield the cleaver if you try to butcher without it\n        A trigger that notifies you when you get a gold flake and makes you make a happygasp (Just a fun thing, can disable this or change the \t\t\t\temote, has no effect on anything.)\n        \n\n\nEventually, the plan is to have this package have support for all the tradeskills but as I only have Gathering and Inkmilling, that will take a little time. I am hoping that I can find people to help me improve and build it so that it includes all the tradeskills\n\n","items":[]},{"type":"function","name":"onLoad","enabled":true,"id":408,"code":"//Used to set up the package and also clear variables like batchNumber, which defines how many batches you have/\n\n//Creates/sets the batchNumber variable at zero\nset_variable(\"batchNumber\", \"0\");\ndisplay_notice(\"Batches cleared\");\n\n//Creates a blueReagents variable, which defines the default blue reagent, if it does not exist and sets it to inkbladder\nif (get_variable(\"blueReagents\") == null){\n    set_variable(\"blueReagents\", \"inkbladder\");\n    display_notice(\"Blue Reagent set to \" + get_variable(\"blueReagent\", \"blue\"));\n}\n\n//Creates a redReagents variable, which defines the default red reagent, if it does not exist and sets it to redclay\nif (get_variable(\"redReagents\") == null){\n    set_variable(\"redReagents\", \"redchitin\");\n    display_notice(\"Blue Reagent set to \" + get_variable(\"redReagent\", \"red\");\n}","items":[]},{"type":"group","name":"Gathering","enabled":true,"id":164,"items":[{"type":"function","name":"doRefine","enabled":true,"id":381,"code":"//Enter the function here\n//Enter the script here\nvar refine = get_variable(\"refining\")\ndec_variable(\"refinenum\", 1);\ndisplay_notice(get_variable(\"refinenum\") + \" refines left\", \"orange\");\n//Refines Grain into Flour\nif(refine == \"flour\"){\n    send_command(\"outr grain\");\n    send_command(\"refine for flour\");\n    send_command(\"inr all\");\n}\n\n//Refines Sugarcane into Sugar\nif(refine == \"sugar\"){\n    send_command(\"outr sugarcane\");\n    send_command(\"refine for sugar\");\n    send_command(\"inr all\");\n}\n\n//Refines Olives into Oil\nif(refine == \"oil\"){\n    send_command(\"outr olive\");\n    send_command(\"refine for oil empty\");\n    send_command(\"pour oil in rift\");\n}\n\n//Refine Seeds into Spices\nif(refine == \"spices\"){\n    send_command(\"outr seeds\");\n    send_command(\"refine for spices\");\n    send_command(\"inr all\");\n}\n\n//Refine Cocoa into Chocolare\nif(refine == \"chocolate\"){\n    send_command(\"outr cocoa\");\n    send_command(\"refine for chocolate\");\n    send_command(\"inr all\");\n}\n\n//Refine Saltwater into Salt\nif(refine == \"salt\"){\n    send_command(\"fill empty with saltwater from rift\");\n    send_command(\"refine for salt\");\n    send_command(\"inr all\");\n}","items":[]},{"type":"group","name":"Triggers","enabled":true,"id":385,"items":[{"type":"trigger","name":"Found Gold","enabled":true,"id":196,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"As you cleanse the clay in the riverwater, you discover a pile of gold flakes hidden by the silt.","actions":[{"action":"notify","notice":"FOUND GOLD FLAKE!!!!!","notice_fg":"#000000","notice_bg":"#ffffff"},{"action":"notify","notice":"FOUND GOLD FLAKE!!!!","notice_fg":"#000000","notice_bg":"#ffffff"},{"action":"command","command":"Happygasp"}],"items":[]},{"type":"trigger","name":"Rift after butchering","enabled":true,"id":379,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"Skilfully, you butcher the corpse of","actions":[{"action":"command","command":"inr all"}],"items":[]},{"type":"trigger","name":"Wield Cleaver to Butcher","enabled":true,"id":378,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Butcher with what? Your fingernails?","actions":[{"action":"script","script":"//Enter the script here\nsend_command(\"Sheathe\");\nsend_command(\"Sheathe\");\nsend_command(\"unwield left\");\nsend_command(\"unwield right\");\nsend_command(\"wield cleaver\");"}],"items":[]},{"type":"trigger","name":"","enabled":true,"id":322,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"Sifting through the soft riverbed with your fingers,","actions":[{"action":"command","command":"inr all"}],"items":[]},{"type":"trigger","name":"In rift Gathered thing","enabled":true,"id":165,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"You reach out and carefully harvest","actions":[{"action":"command","command":"Inr all"}],"items":[]},{"type":"trigger","name":"Rifts when one diamond dust is gathered","enabled":true,"id":387,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Carefully scouring the nooks and crannies of the surrounding rock, you gather a pinch of diamond dust.$","actions":[{"action":"command","command":"Inr all"}],"items":[]},{"type":"trigger","name":"Rifts when more than one diamond dust is gathered","enabled":true,"id":390,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Carefully scouring the nooks and crannies of the surrounding rock, you gather (\\d+) pinches of diamond dust.$","actions":[{"action":"command","command":"Inr all"}],"items":[]},{"type":"trigger","name":"Rifts Milk when Gathered","enabled":true,"id":391,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"Spotting a cow whose udder hangs low to the ground, you kneel beside her, gently coaxing her milk into","actions":[{"action":"command","command":"pour milk into rift"}],"items":[]},{"type":"trigger","name":"Rifts Eggs When Gathered","enabled":true,"id":392,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"You scour the farmland and find a rudimentary nest, from which you gather","actions":[{"action":"command","command":"inr all"}],"items":[]},{"type":"trigger","name":"Rifts Saltwater when Gathered","enabled":true,"id":394,"matching":"begins","whole_words":true,"case_sensitive":true,"text":"Using your acute sight, you examine the surrounding sea. You spot a sparkling patch of pure saltwater, free of impurities, and catch it in","actions":[{"action":"command","command":"pour saltwater into rift"}],"items":[]}],"actions":[]},{"type":"group","name":"Aliases","enabled":true,"id":386,"items":[{"type":"alias","name":"Single gather","enabled":true,"id":270,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nif (args [1] == \"bladder\"){\n \tsend_command(\"butcher squid\")   \n}\n\nif (args [1] == \"scales\"){\n \tsend_command(\"butcher fish for reagent\");   \n}\n\nif (args [1] == \"yellowreagent\"){\n \tsend_command(\"butcher scorpion\");   \n}\n\nif (args [1] == \"horn\"){\n \tsend_command(\"butcher buffalo\");   \n}\n\nif (args[1] == \"tongue\"){\n \tsend_command(\"butcher wyrm\");   \n}\n\nif(args[1] == \"farm\"){\n    send_command(\"gather from farm\");\n}\n\nelse {\n    send_command(\"gather \" + args[1]);\n}"}],"text":"^g (\\w+)$","items":[]},{"type":"alias","name":"Refine multiple times","enabled":true,"id":380,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"refining\", args[2]);\nset_variable(\"refinenum\", args[1]);"},{"action":"label","label":"Repeater"},{"action":"function","fn":"doRefine"},{"action":"waitfor","text":"You have recovered balance on all limbs.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"10"},{"action":"if","cond-type1":"variable","cond-val1":"@refinenum","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"continue","dothenlabel":"Repeater","doelselabel":""},{"action":"notification","heading":"Refining","text":"You have finished refining"}],"text":"^refine (\\d+) (\\w+)$","items":[]},{"type":"alias","name":"","enabled":true,"id":382,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"refinenum\", 0);\ndisplay_notice(\"Stopping Refining\", \"orange\", \"dark green\");"},{"action":"command","command":"","prefix_suffix":true}],"text":"refinestop","items":[]}],"actions":[]}]},{"type":"group","name":"Inkmilling","enabled":true,"id":166,"items":[{"type":"group","name":"Milling Aliases","enabled":true,"id":405,"items":[{"type":"alias","name":"Mill Redinks","enabled":true,"id":395,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingRed"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millred (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Blueinks","enabled":true,"id":406,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingBlue"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millblue (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Yellowinks","enabled":true,"id":403,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingYellow"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millyellow (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Greeninks","enabled":true,"id":393,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingGreen"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millgreen (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Purpleinks","enabled":true,"id":416,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingPurple"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millpurple (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Goldinks","enabled":true,"id":415,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingGold"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millgold (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Mill Blackinks","enabled":true,"id":417,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//sets the amount of ink per batch to a variable to be used in functions\nset_variable(\"batchAmount\", args[2]);\n\t\n//Sets the total amount of batches to a variable to be used in functions\nset_variable(\"batchNumber\", args[1]);\n"},{"action":"label","label":"repeater"},{"action":"function","fn":"MillingBlack"},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"exact","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"2","milliseconds":"0"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"jump","doelse":"stop","dothenlabel":"repeater","doelselabel":"Done"},{"action":"stop"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"Done"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millblack (\\d+) (\\d+)$","items":[]},{"type":"group","name":"Functions","enabled":true,"id":383,"items":[{"type":"function","name":"MillingTemplate","enabled":true,"id":400,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar redReagents = get_variable(\"redReagents\");\nvar blueReagents = get_variable(\"blueReagents\");\nvar yellowReagents = \"yellowchitin\";\nvar commonReagents = \"fishscales\";\nvar uncommonReagents = \"buffalohorn\";\nvar scarceReagents = \"sharktooth\";\nvar rareReagents = \"wyrmtongue\";\nvar goldReagents = \"goldflakes\";\n\n//Calculates nummber of reagents\nvar numRed;\nvar numBlue;\nvar numYellow;\nvar numCommon;\nvar numUncommon;\nvar numScarce;\nvar numRare;\nvar numGold;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numRed + \" \" + redReagents);\n    send_command(\"Outr \" + numBlue + \" \" + blueReagents);\n    send_command(\"Outr \" + numYellow + \" \" + yellowReagents); \n \tsend_command(\"Outr \" + numCommon + \" \" + commonReagents); \n \tsend_command(\"Outr \" + numUncommon + \" \" + uncommonReagents); \n \tsend_command(\"Outr \" + numScarce + \" \" + scarceReagents); \n \tsend_command(\"Outr \" + numRare + \" \" + rareReagents); \n\tsend_command(\"Outr \" + numGold + \" \" + goldReagents);\n     \n    //Put reagents in mill\n   \tsend_command(\"put \" + numRed + \" \" + redReagents + \" in mill\");\n    send_command(\"put \" + numBlue + \" \" + blueReagents + \" in mill\");\n    send_command(\"put \" + numYellow + \" \" + yellowReagents + \" in milll\"); \n \tsend_command(\"put \" + numCommon + \" \" + commonReagents + \" in milll\"); \n \tsend_command(\"put \" + numUncommon + \" \" + uncommonReagents + \" in milll\"); \n \tsend_command(\"put \" + numScarce + \" \" + scarceReagents + \" in milll\"); \n \tsend_command(\"put \" + numRare + \" \" + rareReagents + \" in milll\"); \n \tsend_command(\"put \" + numGold + \" \" + goldReagents + \" in milll\"); \n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" \");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]},{"type":"group","name":"BasicColors","enabled":true,"id":398,"items":[{"type":"function","name":"MillingRed","enabled":true,"id":399,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar redReagents = get_variable(\"redReagents\");\nvar commonReagents = \"fishscales\";\n\n\n//Calculates nummber of reagents\nvar numRed = 1 * amount;\nvar numCommon = 1 * amount;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numCommon + \" \" + commonReagents);\n    send_command(\"Outr \" + numRed + \" \" + redReagents); \n     \n     \n    //Put reagents in mill\n    send_command(\"put \" + numRed + \" \" redReagents + \" in mill\");\n\tsend_command(\"put \" + numCommon + \" \" commonReagents + \" in mill\");\n\t\n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" red\");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]},{"type":"function","name":"MillingBlue","enabled":true,"id":402,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar blueReagents = get_variable(\"blueReagents\");\nvar uncommonReagents = \"buffalohorn\";\n\n//Calculates nummber of reagents\nvar numBlue = 1 * amount;\nvar numUncommon = 1 * amount;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numUncommon + \" \" + uncommonReagents);\n    send_command(\"Outr \" + numBlue + \" \" + blueReagents); \n     \n     \n    //Put reagents in mill\n    send_command(\"put \" + + numBlue + \" \" blueReagents + \" in mill\");\n\tsend_command(\"put \" + numUncommon + \" \" uncommonReagents + \" in mill\");\n\t\n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" blue\");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]},{"type":"function","name":"MillingYellow","enabled":true,"id":397,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar yellowReagent = \"yellowchitin\";\nvar scarceReagents = \"sharktooth\";\n\n//Calculates nummber of reagents\nvar numYellow = 1 * amount;\nvar numScarce = 1 * amount;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numScarce + \" \" + scarceReagents);\n    send_command(\"Outr \" + numYellow + \" \" + yellowReagents); \n     \n     \n    //Put reagents in mill\n    send_command(\"put \" + numYellow + \" \" + yellowReagent + \" in mill\");\n\tsend_command(\"put \" + numScarce + \" \" + scarceReagents + \" in mill\");\n\t\n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" yellow\");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]}],"actions":[]},{"type":"group","name":"AdvancedColors","enabled":true,"id":401,"items":[{"type":"function","name":"MillingGreen","enabled":true,"id":384,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the name of each reagent\nvar yellowReagent = \"yellowchitin\";\nvar redReagent = get_variable(\"redReagents\");\nvar blueReagent = get_variable(\"blueReagents\");\nvar commonReagent = \"fishscales\";\nvar uncommonReagent = \"buffalohorn\";\nvar scarceReagent = \"sharktooth\";\nvar rareReagent = \"wyrmtongue\";\n\n//Calculates how many reagents to use\nvar numBlue = 2 * amount;\nvar numRed;\nvar numYellow = 1 * amount;\nvar numCommon;\nvar numUncommon = 2 * amount;\nvar numScarce = 1 * amount;\nvar numRare;\n\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n     //Used to take reagents from rift\n     send_command(\"Outr \" + numBlue + \" \" + blueReagent);\n     send_command(\"Outr \" + numYellow + \" \" + yellowReagent); \n     send_command(\"Outr \" + numUncommon + \" \" + uncommonReagent);\n     send_command(\"outr \" + numScarce + \" \" + scarceReagent);\n     \n     //Put reagents in mill\n     send_command(\"put \" + numBlue+ \" \" +blueReagents+ \" in mill\");\n     send_command(\"put \" + numYellow+ \" \" +yellowReagent+ \" in mill\");\n     send_command(\"put \" + numScarce+ \" \" +scarceReagents+\" in mill\");\n     send_command(\"put \" +numUncommon+ \" \"+uncommonReagent+ \" in mill\");\n     \n     //Mills for AMOUNT\n     send_command(\"mill for \" + amount + \" green\");\n     \n     //decreases number of batches left\n     dec_variable(\"batchNumber\", 1);\n","items":[]},{"type":"function","name":"MillingPurple","enabled":true,"id":412,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar redReagents = get_variable(\"redReagents\");\nvar blueReagents = get_variable(\"blueReagents\");\nvar yellowReagents = \"yellowchitin\";\nvar commonReagents = \"fishscales\";\nvar uncommonReagents = \"buffalohorn\";\nvar scarceReagents = \"sharktooth\";\nvar rareReagents = \"wyrmtongue\";\nvar goldReagents = \"goldflakes\";\n\n//Calculates nummber of reagents\nvar numRed = 2 * amount;\nvar numBlue = 2 * amount;\nvar numYellow;\nvar numCommon = 2 * amount;\nvar numUncommon = 2 * amount;\nvar numScarce;\nvar numRare = 1* amount;\nvar numGold;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numRed + \" \" + redReagents);\n    send_command(\"Outr \" + numBlue + \" \" + blueReagents);\n \tsend_command(\"Outr \" + numCommon + \" \" + commonReagents); \n \tsend_command(\"Outr \" + numUncommon + \" \" + uncommonReagents);\n \tsend_command(\"Outr \" + numRare + \" \" + rareReagents); \n     \n    //Put reagents in mill\n   \tsend_command(\"put \" + numRed + \" \" + redReagents + \" in mill\");\n    send_command(\"put \" + numBlue + \" \" + blueReagents + \" in mill\"); \n \tsend_command(\"put \" + numCommon + \" \" + commonReagents + \" in milll\"); \n \tsend_command(\"put \" + numUncommon + \" \" + uncommonReagents + \" in milll\");  \n \tsend_command(\"put \" + numRare + \" \" + rareReagents + \" in milll\"); \n\t\n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" purple\");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]},{"type":"function","name":"MillingGold","enabled":true,"id":413,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar redReagents = get_variable(\"redReagents\");\nvar blueReagents = get_variable(\"blueReagents\");\nvar yellowReagents = \"yellowchitin\";\nvar commonReagents = \"fishscales\";\nvar uncommonReagents = \"buffalohorn\";\nvar scarceReagents = \"sharktooth\";\nvar rareReagents = \"wyrmtongue\";\nvar goldReagents = \"goldflakes\";\n\n//Calculates nummber of reagents\nvar numRed;\nvar numBlue;\nvar numYellow;\nvar numCommon = 2 * amount;\nvar numUncommon = 2 * amount;\nvar numScarce = 2 * amount;\nvar numRare = 2 * amount;\nvar numGold = 1 * amount;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift \n \tsend_command(\"Outr \" + numCommon + \" \" + commonReagents); \n \tsend_command(\"Outr \" + numUncommon + \" \" + uncommonReagents); \n \tsend_command(\"Outr \" + numScarce + \" \" + scarceReagents); \n \tsend_command(\"Outr \" + numRare + \" \" + rareReagents);\n\tsend_command(\"Outr \" + numGold + \" \" + goldReagents);\n\t\n     \n    //Put reagents in mill\n \tsend_command(\"put \" + numCommon + \" \" + commonReagents + \" in milll\"); \n \tsend_command(\"put \" + numUncommon + \" \" + uncommonReagents + \" in milll\"); \n \tsend_command(\"put \" + numScarce + \" \" + scarceReagents + \" in milll\"); \n \tsend_command(\"put \" + numRare + \" \" + rareReagents + \" in milll\"); \n\t\n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" gold\");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]},{"type":"function","name":"MillingBlack","enabled":true,"id":414,"code":"//Enter the script here\nvar amount = get_variable(\"batchAmount\");\n//Calculates the Reagents Names\nvar redReagents = get_variable(\"redReagents\");\nvar blueReagents = get_variable(\"blueReagents\");\nvar yellowReagents = \"yellowchitin\";\nvar commonReagents = \"fishscales\";\nvar uncommonReagents = \"buffalohorn\";\nvar scarceReagents = \"sharktooth\";\nvar rareReagents = \"wyrmtongue\";\nvar goldReagents = \"goldflakes\";\n\n//Calculates nummber of reagents\nvar numRed = 1 * amount;\nvar numBlue = 1 * amount;\nvar numYellow = 1 * amount;\nvar numCommon = 2 * amount;\nvar numUncommon = 2 * amount;\nvar numScarce = 2 * amount;\nvar numRare = 3 * amount;\nvar numGold = 1 * amount;\n\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\n\n\n\n    //Used to take reagents from rift\n    send_command(\"Outr \" + numRed + \" \" + redReagents);\n    send_command(\"Outr \" + numBlue + \" \" + blueReagents);\n    send_command(\"Outr \" + numYellow + \" \" + yellowReagents); \n \tsend_command(\"Outr \" + numCommon + \" \" + commonReagents); \n \tsend_command(\"Outr \" + numUncommon + \" \" + uncommonReagents); \n \tsend_command(\"Outr \" + numScarce + \" \" + scarceReagents); \n \tsend_command(\"Outr \" + numRare + \" \" + rareReagents); \n\tsend_command(\"Outr \" + numGold + \" \" + goldReagents);\n     \n    //Put reagents in mill\n   \tsend_command(\"put \" + numRed + \" \" + redReagents + \" in mill\");\n    send_command(\"put \" + numBlue + \" \" + blueReagents + \" in mill\");\n    send_command(\"put \" + numYellow + \" \" + yellowReagents + \" in milll\"); \n \tsend_command(\"put \" + numCommon + \" \" + commonReagents + \" in milll\"); \n \tsend_command(\"put \" + numUncommon + \" \" + uncommonReagents + \" in milll\"); \n \tsend_command(\"put \" + numScarce + \" \" + scarceReagents + \" in milll\"); \n \tsend_command(\"put \" + numRare + \" \" + rareReagents + \" in milll\"); \n \tsend_command(\"put \" + numGold + \" \" + goldReagents + \" in milll\"); \n     \n    //Mills for AMOUNT\n    send_command(\"mill for \" + amount + \" \");\n     \n    //decreases number of batches left\n    dec_variable(\"batchNumber\", 1);\n    \n    \n","items":[]}],"actions":[]}],"actions":[]}],"actions":[]},{"type":"group","name":"RedYellowBlue Inks","enabled":false,"id":116,"items":[{"type":"alias","name":"Make red inks times batchNumber*num -Queue-","enabled":true,"id":202,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"batchAmount\", args[2]);\nset_variable(\"batchNumber\", args[1]);"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"jump","doelse":"continue","dothenlabel":"No Batch","doelselabel":""},{"action":"repeat","label":"repeater","mode":"while","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"counttype":"variable","count":"batchNumber"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"jump","dothenlabel":"","doelselabel":"batchesPaused"},{"action":"command","command":"Outr @2 scales","prefix_suffix":true},{"action":"command","command":"Outr @2 clay","prefix_suffix":true},{"action":"command","command":"Put @2 clay in mill","prefix_suffix":true},{"action":"command","command":"queue add eqbal Put @2 scales in mill","prefix_suffix":true},{"action":"command","command":"queue add eqbal Mill for @2 red","prefix_suffix":true},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"5","milliseconds":"0"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"1","op":"sub"},{"action":"label","label":"repeater"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber Reset To @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"No Batch"},{"action":"notify","notice":"Assign Batch Number with setbatches (number)","notice_fg":"#ff9900","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"batchesPaused"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"^millred (\\d+) (\\d+)$","items":[]},{"type":"alias","name":"Make Blue inks times batchNumber*num -Queue-","enabled":true,"id":208,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"","cond-cs":true,"dothen":"jump","doelse":"continue","dothenlabel":"No Batch","doelselabel":""},{"action":"repeat","label":"repeater","mode":"while","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"counttype":"variable","count":"batchNumber"},{"action":"command","command":"Outr @num bladder","prefix_suffix":true},{"action":"command","command":"Outr @num buffalohorn","prefix_suffix":true},{"action":"command","command":"Put @num bladder in mill","prefix_suffix":true},{"action":"command","command":"Queue add eqbal Put @num horn in mill","prefix_suffix":true},{"action":"command","command":"Queue add eqbal Mill for @num blue","prefix_suffix":true},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"5","milliseconds":"0"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"1","op":"sub"},{"action":"label","label":"repeater"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber set to @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"No Batch"},{"action":"notify","notice":"Assign Batch Number with setbatches (number)","notice_fg":"#ff9900","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"batchesPaused"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"Millblue <num>","items":[]},{"type":"alias","name":"Make Yellow inks times batchNumber*num -Queue-","enabled":true,"id":209,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"jump","doelse":"continue","dothenlabel":"No Batch","doelselabel":""},{"action":"repeat","label":"repeater","mode":"count","cond-type1":"value","cond-val1":"","cond-type2":"value","cond-val2":"","cond-op":"eq","cond-mod":"","cond-cs":false,"counttype":"variable","count":"batchNumber"},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"Outr @num yellowchitin","prefix_suffix":true},{"action":"command","command":"Outr @num sharktooth","prefix_suffix":true},{"action":"command","command":"Put @num chitin in mill","prefix_suffix":true},{"action":"command","command":"Put @num tooth in mill","prefix_suffix":true},{"action":"command","command":"queue add eqbal Mill for @num yellow","prefix_suffix":true},{"action":"waitfor","text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","matching":"regexp","whole_words":false,"case_sensitive":false,"expire":"60"},{"action":"wait","seconds":"5","milliseconds":"0"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"1","op":"sub"},{"action":"label","label":"repeater"},{"action":"notify","notice":"FINISHED MILLING","notice_fg":"#ff0000","notice_bg":"#636363"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"},{"action":"notify","notice":"batchNumber set to @batchNumber","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"No Batch"},{"action":"notify","notice":"Assign Batch Number with setbatches (number)","notice_fg":"#ff9900","notice_bg":"#000000"},{"action":"stop"},{"action":"label","label":"batchesPaused"},{"action":"notify","notice":"YOU STOPPED MILLING","notice_fg":"#f3f3f3","notice_bg":"#731111"}],"text":"Millyellow <num>","items":[]}],"actions":[]},{"type":"trigger","name":"Rift Inks from Mill","enabled":true,"id":168,"matching":"exact","whole_words":false,"case_sensitive":false,"text":"With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill.","actions":[{"action":"command","command":"Take group ink from mill"},{"action":"command","command":"Take ink from mill"},{"action":"command","command":"Inr all"},{"action":"script","script":"//Enter the script here\n//Uses personal variable batchNumber that is set to calculate the amount of batches left to make\nvar batches = get_variable(\"batchNumber\");\ndisplay_notice(batches + \"batches left to make\", \"green\");"}],"items":[]},{"type":"trigger","name":"Oops... Removing Inks","enabled":true,"id":205,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Perhaps you'd like to remove the last ink before attempting to mill another?","actions":[{"action":"command","command":"take ink from mill"},{"action":"command","command":"take group ink from mill"}],"items":[]},{"type":"alias","name":"Stops milling","enabled":true,"id":206,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"notify","notice":"You Have Stopped Milling at @batchNumber left","notice_fg":"#ff0000","notice_bg":"#000000"},{"action":"variable","varname":"batchNumber","valtype":"value","value":"0","op":"set"}],"text":"millstop","items":[]},{"type":"alias","name":"","enabled":true,"id":207,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"notify","notice":"batchNumber set to @count","notice_fg":"#ff0000","notice_bg":"#d8d8d8"},{"action":"command","command":"@set batchNumber @count","prefix_suffix":true},{"action":"if","cond-type1":"variable","cond-val1":"batchNumber","cond-type2":"value","cond-val2":"0","cond-op":"eq","cond-mod":"not","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""}],"text":"setBatches <count>","items":[]},{"type":"alias","name":"Switches the default blue reagent used by default","enabled":true,"id":409,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Sees what the current blue reagent default is\nvar curBlue = get_variable(\"blueReagents\");\n\nif (curBlue == \"inkbladder\"){\n \tset_variable(\"blueReagents\", \"lumic\");\n    display_notice(\"Default Blue Reagent is now \" + get_variable(\"blueReagents\"), \"blue\");\n}\n\nif (curBlue == \"lumic\"){\n \tset_variable(\"blueReagents\", \"inkbladder\");\n    display_notice(\"Default Blue Reagent is now \" + get_variable(\"blueReagents\"), \"blue\");\n}"}],"text":"blueswitch","items":[]},{"type":"alias","name":"Switches the default red reagent used by default","enabled":true,"id":410,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Sees what the current blue reagent default is\nvar curRed = get_variable(\"redReagents\");\n\nif (curRed == \"redclay\"){\n \tset_variable(\"redReagents\", \"redchitin\");\n    display_notice(\"Default Blue Reagent is now \" + get_variable(\"redReagents\"), \"orange\");\n}\n\nif (curRed == \"redchitin\"){\n \tset_variable(\"redReagents\", \"redclay\");\n    display_notice(\"Default Blue Reagent is now \" + get_variable(\"redReagents\"), \"orange\");\n}"}],"text":"redswitch","items":[]},{"type":"alias","name":"","enabled":true,"id":411,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"function","fn":"onLoad"}],"text":"startup","items":[]}]}],"description":"Reflexes to make using tradeskills easier and more fluid"}